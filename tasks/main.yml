---
# tasks file for hadoop_hive
- name: "Checking if Hive already Setup"
  ansible.builtin.command: "hive --version"
  ignore_errors: true
  changed_when: false
  register: hive_setup_check

- name: Check if Hive is setup (1/5)
  ansible.builtin.debug:
    msg: "Hive is already Setup on your system"
  when: hive_setup_check.rc == 0

- name: Check if Hive is setup (2/5)
  ansible.builtin.debug:
    msg: "Hive is currently not setup on your system"
  when: hive_setup_check.rc != 0

- name: Checking if Hive software is present locally at specified location (3/5)
  ansible.builtin.command: "ls -a {{ hive_software_directory }}{{ hive_software_version }}"
  register: hive_local_check_status
  changed_when: false
  ignore_errors: true

- name: Check if Hive is setup (4/5)
  ansible.builtin.debug:
    msg: "Hive Software Present locally at specified location"
  when: hive_local_check_status.rc == 0

- name: Check if Hive is setup (5/5)
  ansible.builtin.debug:
    msg: "Hive Software not Present locally at specified location"
  when: hive_local_check_status.rc != 0

- name: "Creating Software Directory for Hive at Specified Location"
  ansible.builtin.file:
    state: directory
    path: "{{ hive_software_directory }}"
  when: hive_setup_check.rc != 0 and hive_local_check_status.rc != 0

- name: "Downloading Hive Software and Extracting it to Specified Location"
  ansible.builtin.unarchive:
    src: "{{ hive_software_download_url }}"
    dest: "{{ hive_software_directory }}"
    remote_src: true
  when: hive_setup_check.rc != 0 and hive_local_check_status.rc != 0

- name: "Creating Hive Workspace"
  ansible.builtin.file:
    state: directory
    path: "{{ hive_workspace_directory }}"
  when: hive_setup_check.rc != 0

# - name: "Setting Hive Environmental Variables"
#  command: "{{ item }}"
#  loop:
#          - "export HIVE_HOME={{ hive_software_directory }}{{ hive_software_version }}/"
#          - "export PATH={{ hive_software_directory }}{{ hive_software_version }}/bin/:$PATH"

- name: Ensure .bashrc file exists
  ansible.builtin.copy:
    content: ""
    dest: /home/ubuntu/.bashrc
    force: false
    group: ubuntu
    owner: ubuntu
    mode: o+rwx

- name: Make Environmental Variables Permanent after reboot
  ansible.builtin.blockinfile:
    path: /home/ubuntu/.bashrc
    content: |
            export HIVE_HOME={{ hive_software_directory }}{{ hive_software_version }}/
            export PATH={{ hive_software_directory }}{{ hive_software_version }}/bin/:$PATH
